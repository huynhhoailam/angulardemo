{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.material.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/category-form/category-form.component.css","webpack:///./src/app/category-form/category-form.component.html","webpack:///./src/app/category-form/category-form.component.ts","webpack:///./src/app/category-list/category-list.component.css","webpack:///./src/app/category-list/category-list.component.html","webpack:///./src/app/category-list/category-list.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/services/category.service.ts","webpack:///./src/app/shared/DBOperation.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".space {\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n.home {\\r\\n    width: 150px;\\r\\n    color: darkred  ;\\r\\n}\\r\\n  \"","module.exports = \"<mat-toolbar color=\\\"accent\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span class=\\\"home\\\" routerLink=\\\"\\\">ANGULAR</span>\\r\\n    <span class=\\\"space\\\" routerLink=\\\"/category\\\">CATEGORIES</span>\\r\\n    <span class=\\\"space\\\" routerLink=\\\"/product\\\">PRODUCTS</span>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { NgModule } from '@angular/core';\r\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatTableModule } from '@angular/material';\r\nimport { MatPaginatorModule, MatFormFieldModule, MatRadioModule, MatSelectModule, MatInputModule } from '@angular/material';\r\nimport { MatDatepickerModule, MatNativeDateModule, MatOptionModule, MatDialogModule } from '@angular/material';\r\nimport {  MatProgressSpinnerModule, MatSnackBarModule } from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatSidenavModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatRadioModule,\r\n        MatSelectModule,\r\n        MatInputModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatOptionModule,\r\n        MatDialogModule,\r\n        MatProgressSpinnerModule,\r\n        MatSnackBarModule\r\n    ],\r\n    exports: [\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatSidenavModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatRadioModule,\r\n        MatSelectModule,\r\n        MatInputModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatOptionModule,\r\n        MatDialogModule,\r\n        MatProgressSpinnerModule,\r\n        MatSnackBarModule\r\n    ],\r\n})\r\nexport class AppMaterialModule { }\r\n","import { AppMaterialModule } from './app.material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CategoryListComponent } from './category-list/category-list.component';\nimport { ProductComponent } from './product/product.component';\nimport { Routing } from './app.routing';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CategoryService } from './services/category.service';\nimport { CategoryFormComponent } from './category-form/category-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoryFormComponent,\n    ProductComponent,\n    CategoryListComponent\n  ],\n  imports: [\n    BrowserModule,\n    Routing,\n    HttpClientModule,\n    AppMaterialModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [CategoryService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule, Router } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CategoryListComponent } from './category-list/category-list.component';\r\nimport { ProductComponent } from './product/product.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {path: '', pathMatch: 'full', redirectTo: ''},\r\n    {path: 'category', component: CategoryListComponent},\r\n    {path: 'product', component: ProductComponent}\r\n];\r\n\r\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"\"","module.exports = \"\"","import { CategoryService } from './../services/category.service';\nimport { FormBuilder } from '@angular/forms';\nimport { CategoryListComponent } from './../category-list/category-list.component';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-category-form',\n  templateUrl: './category-form.component.html',\n  styleUrls: ['./category-form.component.css']\n})\nexport class CategoryFormComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<CategoryListComponent>,\n    private fb: FormBuilder,\n    private _categoryService: CategoryService) { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.contactlist-container, #paginator {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 300px;\\r\\n  max-width: 1200px;\\r\\n  max-height: 700px;\\r\\n  overflow: auto;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.example-form-field {\\r\\n  width: 200px;\\r\\n  margin-left: 70%;\\r\\n}\\r\\n\\r\\n.btnCreate {\\r\\n  margin-left: 50px;\\r\\n}\\r\\n\\r\\n.spinner{\\r\\n  top: 45%;\\r\\n  left: 47%;\\r\\n  position: fixed;\\r\\n}\"","module.exports = \"<div class=\\\"spinner\\\" *ngIf=\\\"loadingState; else category\\\">\\r\\n    <mat-spinner></mat-spinner>\\r\\n</div>\\r\\n<ng-template class=\\\"contactlist-container mat-elevation-z8\\\" #category>\\r\\n    <div>\\r\\n        <button class=\\\"btnCreate\\\" title=\\\"Create\\\" mat-stroked-button color=\\\"primary\\\" color=\\\"primary\\\" (click)=\\\"addCategory()\\\">Create</button>\\r\\n        <mat-form-field class=\\\"example-form-field\\\">\\r\\n            <input matInput type=\\\"text\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"valueSearch\\\" (keyup)=\\\"searchCategory(valueSearch)\\\">\\r\\n            <button mat-button *ngIf=\\\"valueSearch\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"valueSearch=''\\\">\\r\\n                <mat-icon>x</mat-icon>\\r\\n            </button>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <table mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <ng-container matColumnDef=\\\"ID\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>ID</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.categoryID}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.categoryName}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Description\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Description</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.desctiption}}</td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                <button title=\\\"Edit\\\" mat-stroked-button color=\\\"accent\\\">Edit</button>\\r\\n                <button title=\\\"Delete\\\" mat-stroked-button color=\\\"warn\\\">Delete</button>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n</ng-template>\"","import { DBOperation } from './../shared/DBOperation';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CategoryService } from '../services/category.service';\r\nimport { ICategory } from '../models/category';\r\nimport { MatTableDataSource, MatSnackBar } from '@angular/material';\r\nimport { MatDialog } from '@angular/material';\r\nimport { CategoryFormComponent } from '../category-form/category-form.component';\r\n\r\n@Component({\r\n    selector: 'app-category-list',\r\n    templateUrl: './category-list.component.html',\r\n    styleUrls: ['./category-list.component.css']\r\n})\r\n\r\nexport class CategoryListComponent implements OnInit {\r\n\r\n    valueSearch = '';\r\n    loadingState: boolean;\r\n    displayedColumns = ['ID', 'Name', 'Description', 'Action'];\r\n    dataSource = new MatTableDataSource<ICategory>();\r\n    categories: ICategory[];\r\n    category: ICategory;\r\n    private categoryUrl = 'api/category/';\r\n    dbop: DBOperation;\r\n    modalTitle: string;\r\n    modalBtnTitle: string;\r\n\r\n    constructor(private _categoryService: CategoryService, private dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n        this.loadingState = true;\r\n        this.LoadData();\r\n    }\r\n\r\n    LoadData(): void {\r\n        this._categoryService.GetAllCategories(this.categoryUrl + 'GetAllCategory')\r\n            .subscribe(categories => {\r\n                this.loadingState = false;\r\n                this.dataSource.data = categories;\r\n            });\r\n    }\r\n\r\n    addCategory(): void {\r\n        this.dbop = DBOperation.create;\r\n        this.modalTitle = 'Add New Category';\r\n        this.modalBtnTitle = 'Add';\r\n        this.openDialog();\r\n    }\r\n\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(CategoryFormComponent, {\r\n            width: '500px',\r\n            data: {\r\n                category: this.category,\r\n                dbop: this.dbop,\r\n                modalTitle: this.modalTitle,\r\n                modalBtnTitle: this.modalBtnTitle\r\n            }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed.');\r\n            if (result === 'success') {\r\n                this.loadingState = true;\r\n                this.LoadData();\r\n                switch (this.dbop) {\r\n                    case DBOperation.create:\r\n                        this.showMessage('Added successfully.');\r\n                        break;\r\n                }\r\n\r\n            } else if (result === 'error') {\r\n                this.showMessage('There are some problems when saving. Please contact admin.');\r\n            } else {\r\n                this.showMessage('Please try again. Something went wrong.');\r\n            }\r\n        });\r\n    }\r\n\r\n    showMessage(msg: string) {\r\n        this.snackBar.open(msg, '', {\r\n            duration: 3000\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"product\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-product',\r\n    templateUrl: './product.component.html',\r\n    styleUrls: ['./product.component.css']\r\n})\r\n\r\nexport class ProductComponent implements OnInit {\r\n    constructor() {}\r\n\r\n    ngOnInit() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ICategory } from '../models/category';\r\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n    })\r\n};\r\n\r\n@Injectable()\r\n\r\nexport class CategoryService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    GetAllCategories(url: string): Observable<ICategory[]> {\r\n        return this.http.get<ICategory[]>(url).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    AddCategory(url: string, category: ICategory): Observable<any> {\r\n        return this.http.post(url, JSON.stringify(category), httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    UpdateCategory(url: string, id: number, category: ICategory): Observable<any> {\r\n        const newurl = `${url}?id=${id}`;\r\n        return this.http.put(newurl, category, httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    DeleteCategory(url: string, id: number): Observable<any> {\r\n        const newurl = `${url}?id=${id}`;\r\n        return this.http.delete(newurl, httpOptions).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    SearchCategory(url: string, search: string): Observable<ICategory[]> {\r\n        if (!search.trim()) {\r\n            return of([]);\r\n        }\r\n\r\n        return this.http.get<ICategory[]>(`${url}/?categoryName=${search}`).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            console.log('An error ocurred: ', error.error.message);\r\n        } else {\r\n            console.error(\r\n                `Backend returned code ${error.status},` + `body was: ${error.error}`\r\n            );\r\n        }\r\n        return throwError('Something bad happened. Please try again later.');\r\n    }\r\n}\r\n","export enum DBOperation {\r\n    create = 1,\r\n    update = 2,\r\n    delete = 3\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}